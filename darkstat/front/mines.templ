package front

import (
	"fmt"
	"github.com/darklab8/fl-darkstat/darkstat/configs_export"
	"github.com/darklab8/fl-darkstat/darkstat/configs_export/infocarder"
	"github.com/darklab8/fl-darkstat/darkstat/front/disco"
	"github.com/darklab8/fl-darkstat/darkstat/front/frmt"
	"github.com/darklab8/fl-darkstat/darkstat/front/tab"
	"github.com/darklab8/fl-darkstat/darkstat/front/types"
	"github.com/darklab8/fl-darkstat/darkstat/front/urls"
	"strconv"
	"strings"
)

func MineDetailedUrl(mine configs_export.Mine) string {
	return "cdn/mines/mines_base_" + strings.ToLower(mine.Nickname)
}

templ MinesTable(mines []configs_export.Mine, pinm tab.PinMod, shared *types.SharedData) {
	<table class="sortable">
		<thead>
			<tr>
				<th style="width:100px;">Mine</th>
				if pinm == tab.PinMode {
					<th style="width:25px;">Select</th>
					<th style="width:25px;">Select</th>
				}
				@disco.ThDisco(shared)
				<th style="width:25px;">Price</th>
				<th style="width:25px;">Buyable</th>
				if shared.ShowFLSR {
					<th style="width:5px;">Mass</th>
				}
				<th style="width:25px;">
					@frmt.MultiLinestring([]string{"Ammo", "Price"})
				</th>
				<th style="width:25px;">
					@frmt.MultiLinestring([]string{"Hull", "Dmg"})
				</th>
				<th style="width:25px;">
					@frmt.MultiLinestring([]string{"Shield", "Dmg"})
				</th>
				<th style="width:25px;">Value</th>
				<th style="width:25px;">Refire</th>
				<th style="width:5px;">
					if shared.ShowDisco {
						@frmt.MultiLinestring([]string{"Ammo", "Limit", "(+Max ", "Cart.)"})
					} else {
						@frmt.MultiLinestring([]string{"Ammo", "Limit"})
					}
				</th>
				<th style="width:25px;">
					@frmt.MultiLinestring([]string{"Detonation", "Distance"})
				</th>
				<th style="width:25px;">Radius</th>
				<th style="width:25px;">
					@frmt.MultiLinestring([]string{"Seek", "Dist."})
				</th>
				<th style="width:25px;">
					@frmt.MultiLinestring([]string{"Top", "Speed"})
				</th>
				<th style="width:25px;">
					@frmt.MultiLinestring([]string{"Accele", "ration"})
				</th>
				<th style="width:25px;">
					@frmt.MultiLinestring([]string{"Linear", "Drag"})
				</th>
				<th style="width:25px;">
					@frmt.MultiLinestring([]string{"Life", "time"})
				</th>
				<th style="width:25px;">
					@frmt.MultiLinestring([]string{"Owner", "Safe"})
				</th>
				<th style="width:25px;">Toughness</th>
				<th style="width:25px;">Hit Pts</th>
				<th style="width:25px;">Lootable</th>
				<th style="width:25px;">Nickname</th>
				<th style="width:25px;">Name ID</th>
				<th style="width:25px;">Info ID</th>
				<th style="width:25px;">
					@frmt.MultiLinestring([]string{"Projectile", "Archetype"})
				</th>
				<th style="max-width:100%;"></th>
			</tr>
		</thead>
		<tbody>
			for _, mine := range mines {
				@tab.TrFromMainTb(mine.Nickname, MineDetailedUrl(mine), pinm) {
					@tab.PinTd(mine.Nickname, mine.Name, pinm)
					@tab.PinSelectLeftRight(pinm, MineDetailedUrl(mine))
					@disco.TdDisco(shared, mine.Nickname, mine.DiscoveryTechCompat)
					<td>{ strconv.Itoa(mine.Price) } </td>
					<td>{ frmt.FormatBoolAsYesNo(configs_export.Buyable(mine.Bases)) }</td>
					if shared.ShowFLSR {
						<td>{ fmt.Sprintf("%.2f", mine.Mass) }</td>
					}
					<td>{ strconv.Itoa(mine.AmmoPrice) } </td>
					<td>{ strconv.Itoa(mine.HullDamage) }</td>
					<td>{ strconv.Itoa(mine.ShieldDamage) }</td>
					<td>{ fmt.Sprintf("%.2f",mine.Value) }</td>
					<td>{ fmt.Sprintf("%.2f", mine.Refire) }</td>
					<td>{ frmt.GetAmmoLimitFormatted(mine.AmmoLimit) }</td>
					<td>{ fmt.Sprintf("%.2f", mine.DetonationDistance) }</td>
					<td>{ fmt.Sprintf("%.2f",mine.Radius) }</td>
					<td>{ strconv.Itoa(mine.SeekDistance) }</td>
					<td>{ strconv.Itoa(mine.TopSpeed) }</td>
					<td>{ strconv.Itoa(mine.Acceleration) }</td>
					<td>{ fmt.Sprintf("%.1f",mine.LinearDrag) }</td>
					<td>{ fmt.Sprintf("%.1f",mine.LifeTime) }</td>
					<td>{ strconv.Itoa(mine.OwnerSafe) }</td>
					<td>{ fmt.Sprintf("%.2f",mine.Toughness) }</td>
					<td>{ strconv.Itoa(mine.HitPts) }</td>
					<td>{ strconv.FormatBool(mine.Lootable) }</td>
					<td class="seo">{ mine.Nickname } </td>
					<td class="seo">{ strconv.Itoa(mine.IdsName) } </td>
					<td class="seo">{ strconv.Itoa(mine.IdsInfo) } </td>
					<td class="seo">{ mine.ProjectileArchetype } </td>
					@tab.TdInfoCardClick(infocarder.InfocardKey(mine.Nickname), mine.Nickname, pinm, shared, tab.InfocardClickOpts{})
				}
			}
		</tbody>
	</table>
}

// https://www.cssscript.com/minimalist-table-sortable/#:~:text=Description%3A-,sorttable.,clicking%20on%20the%20table%20headers
// https://www.cssscript.com/fast-html-table-sorting/
templ MinesT(mines []configs_export.Mine, mode2 tab.ShowEmpty, shared *types.SharedData) {
	@TabMenu(urls.Mines, mode2, shared)
	@tab.TabContent() {
		<div class="splitter">
			@tab.LeftTable() {
				@tab.TableTop() {
					@tab.FilterBar(shared)
					<div id="table-top-main">
						@MinesTable(mines, tab.MainMode, shared)
					</div>
					<div id={ "table-top-main" + string(tab.PinMode) } class="hidden">
						@MinesTable(mines, tab.PinMode, shared)
					</div>
				}
				@tab.TableBottom() {
					@GoodAtBaseSharedT(ShowAsCommodity(false), shared)
				}
			}
			@tab.InfocardTable() {
				@tab.InfocardShared()
			}
		</div>
	}
}
