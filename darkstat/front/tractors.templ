package front

import (
	"fmt"
	"github.com/darklab8/fl-darkstat/configs/config_consts"
	"github.com/darklab8/fl-darkstat/darkstat/configs_export"
	"github.com/darklab8/fl-darkstat/darkstat/front/types"
	"github.com/darklab8/fl-darkstat/darkstat/front/urls"
	"github.com/darklab8/fl-darkstat/darkstat/front/frmt"
	"github.com/darklab8/fl-darkstat/darkstat/front/tab"
	"strconv"
	"strings"
)

func TractorDetailedUrl(tractor *configs_export.Tractor, tab_mode TractorMode) string {
	if tab_mode == TractorModShop {
		return "cdn/tractor/tractor_base_" + strings.ToLower(string(tractor.Nickname))
	} else if tab_mode == TractorIDRephacks {
		return "cdn/id_rephacks/id_rephacks_" + strings.ToLower(string(tractor.Nickname))
	}

	panic("not supported mode for tractor")
}

type TractorMode int64

const (
	TractorModShop TractorMode = iota
	TractorIDRephacks
)

templ TractorHeaders(shared *types.SharedData) {
	<th style="width:25px;">Price</th>
	<th style="width:25px;">Buyable</th>
	if shared.ShowFLSR {
		<th style="width:5px;">Mass</th>
	}
	<th style="width:25px;">
		@frmt.MultiLinestring([]string{"Max", "Length"})
	</th>
	<th style="width:25px;">
		@frmt.MultiLinestring([]string{"Reach", "Speed"})
	</th>
	<th style="width:25px;">Lootable</th>
	<th style="width:25px;">Nickname</th>
	<th style="width:25px;">Name ID</th>
	<th style="width:25px;">Info ID</th>
	<th style="max-width:100%;"></th>
}

templ TractorValues(tractor *configs_export.Tractor, shared *types.SharedData) {
	<td>{ strconv.Itoa(tractor.Price) } </td>
	<td>{ frmt.FormatBoolAsYesNo(configs_export.Buyable(tractor.Bases)) }</td>
	if shared.ShowFLSR {
		<td>{ fmt.Sprintf("%.2f", tractor.Mass) }</td>
	}
	<td>{ strconv.Itoa(tractor.MaxLength) } </td>
	<td>{ strconv.Itoa(tractor.ReachSpeed) }</td>
	<td>{ strconv.FormatBool(tractor.Lootable) }</td>
	<td class="seo">{ string(tractor.Nickname) } </td>
	<td class="seo">{ strconv.Itoa(tractor.NameID) } </td>
	<td class="seo">{ strconv.Itoa(tractor.InfoID) } </td>
}

// https://www.cssscript.com/minimalist-table-sortable/#:~:text=Description%3A-,sorttable.,clicking%20on%20the%20table%20headers
// https://www.cssscript.com/fast-html-table-sorting/
templ TractorsT(tractors []*configs_export.Tractor, mode2 tab.ShowEmpty, tab_mode TractorMode, shared *types.SharedData) {
	if tab_mode == TractorModShop {
		@TabMenu(urls.Tractors, mode2, shared)
	} else if tab_mode == TractorIDRephacks {
		@TabMenu(urls.IDRephacks, mode2, shared)
	}
	@tab.TabContent() {
		<div class="splitter">
			@tab.LeftTable(){
				@tab.TableTop(){
					if tab_mode == TractorModShop {
						@tab.PageHint() {
						if shared.ShowDisco {
							Your ID, You  can have only one, it affects <a href={ templ.SafeURL(types.GetCtx(ctx).SiteHost + "index_docs.html#Techcompatibility") }>tech compatibility. See docs.</a>
						} else {
							Tractors
						}
						}
					}
					if tab_mode == TractorIDRephacks {
						@tab.PageHint() {
							ID reputation limits enforced
						}
					}
					@tab.FilterBar(&types.SharedData{})
					<div id="table-top-main">
						<table class="sortable">
							<thead>
								<tr>
									<th style="width:200px;">Tractor</th>
									@TractorHeaders(shared)
								</tr>
							</thead>
							<tbody>
								for _, tractor := range tractors {
									@tab.TrFromMainTb(string(tractor.Nickname), TractorDetailedUrl(tractor, tab_mode), "") {
										<td class="seo">{ tractor.Name }</td>
										@TractorValues(tractor, shared)
										@tab.TdInfoCardClick(configs_export.InfocardKey(tractor.Nickname), string(tractor.Nickname), "", shared, tab.InfocardClickOpts{})
									}
								}
							</tbody>
						</table>
					</div>
				}
				@tab.TableBottom(){
					if tab_mode == TractorModShop {
						@GoodAtBaseSharedT(ShowAsCommodity(false), shared)
					} else if tab_mode == TractorIDRephacks {
						@IDRephacksShared()
					}
				}
			}
			@tab.InfocardTable(){
				@tab.InfocardShared()
			}
		</div>
	}
}

templ IDRephacksShared() {
	<table class="sortable">
		<thead>
			<tr class="flexed-tr">
				<th style="width:150px;">Faction</th>
				<th style="width:25px;">
					@frmt.MultiLinestring([]string{"Faction", "Nickname"})
				</th>
				<th style="width:25px;">Reputation</th>
				<th style="width:25px;">Relationship</th>
				<th style="width:25px;">Rep Type</th>
				<th style="max-width:100%;"></th>
			</tr>
		</thead>
		<tbody>
			{ children... }
		</tbody>
	</table>
}

templ IDRephacksT(rephack *configs_export.Tractor) {
	<div class="bottom_name">{ rephack.Name },
	@tab.PageTime()
	</div>
	@IDRephacksShared() {
		for _, rep := range rephack.GetRephacksList() {
			<tr
				hx-get={ types.GetCtx(ctx).SiteRoot + tab.InfocardURL(configs_export.InfocardKey(rep.FactionNick)) }
				hx-trigger="click"
				hx-target="#infocard_view"
				hx-swap="innerHTML"
				preload="mouseover"
				onclick="RowHighlighter(this)"
			>
				<td>
					@frmt.WriteRepName(rep.FactionName)
				</td>
				<td>{ string(rep.FactionNick) }</td>
				<td>{ fmt.Sprintf("%.2f", rep.Reputation) }</td>
				<td>{ config_consts.GetRelationshipStatus(rep.Reputation).ToStr() }</td>
				<td>{ rep.RepType.ToStr() }</td>
				<td></td>
			</tr>
		}
	}
}
