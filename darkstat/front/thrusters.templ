package front

import (
	"fmt"
	"github.com/darklab8/fl-darkstat/darkstat/configs_export"
	"github.com/darklab8/fl-darkstat/darkstat/front/types"
	"github.com/darklab8/fl-darkstat/darkstat/front/urls"
	"github.com/darklab8/fl-darkstat/darkstat/front/disco"
	"github.com/darklab8/fl-darkstat/darkstat/front/tab"
	"github.com/darklab8/fl-darkstat/darkstat/front/frmt"
	"strconv"
	"strings"
)

func ThrusterDetailedUrl(thruster configs_export.Thruster) string {
	return "cdn/thrusters/thruster_base_" + strings.ToLower(thruster.Nickname)
}

templ ThrustersTable(thrusters []configs_export.Thruster, pinm tab.PinMod, shared *types.SharedData) {
	<table class="sortable">
		<thead>
			<tr>
				<th style="width:200px;">Thruster</th>
				@disco.ThDisco(shared)
				if pinm == tab.PinMode {
					<th style="width:25px;">Select</th>
					<th style="width:25px;">Select</th>
				}
				<th style="width:25px;">Price</th>
				<th style="width:25px;">Buyable</th>
				if shared.ShowFLSR {
					<th style="width:5px;">Mass</th>
				}
				<th style="width:25px;">Max Force</th>
				<th style="width:25px;">
					@frmt.MultiLinestring([]string{"Power", "Usage"})
				</th>
				<th style="width:25px;">Efficiency</th>
				<th style="width:25px;">Value</th>
				<th style="width:25px;">Hit Pts</th>
				<th style="width:25px;">Lootable</th>
				<th style="width:25px;">Nickname</th>
				<th style="width:25px;">Name ID</th>
				<th style="width:25px;">Info ID</th>
				<th style="max-width:100%;"></th>
			</tr>
		</thead>
		<tbody>
			for _, thruster := range thrusters {
				@tab.TrFromMainTb(thruster.Nickname, ThrusterDetailedUrl(thruster), pinm) {
					@tab.PinTd(thruster.Nickname, thruster.Name, pinm)
					@tab.PinSelectLeftRight(pinm, ThrusterDetailedUrl(thruster))
					@disco.TdDisco(shared, thruster.Nickname, thruster.DiscoveryTechCompat)
					<td>{ strconv.Itoa(thruster.Price) } </td>
					<td>{ frmt.FormatBoolAsYesNo(configs_export.Buyable(thruster.Bases)) }</td>
					if shared.ShowFLSR {
						<td>{ fmt.Sprintf("%.2f", thruster.Mass) }</td>
					}
					<td>{ strconv.Itoa(thruster.MaxForce) } </td>
					<td>{ strconv.Itoa(thruster.PowerUsage) }</td>
					<td>{ fmt.Sprintf("%.2f",thruster.Efficiency) }</td>
					<td>{ fmt.Sprintf("%.2f", thruster.Value) }</td>
					<td>{ strconv.Itoa(thruster.HitPts) }</td>
					<td>{ strconv.FormatBool(thruster.Lootable) }</td>
					<td class="seo">{ thruster.Nickname } </td>
					<td class="seo">{ strconv.Itoa(thruster.NameID) } </td>
					<td class="seo">{ strconv.Itoa(thruster.InfoID) } </td>
					@tab.TdInfoCardClick(configs_export.InfocardKey(thruster.Nickname), thruster.Nickname, pinm, shared, tab.InfocardClickOpts{})
				}
			}
		</tbody>
	</table>
}

// https://www.cssscript.com/minimalist-table-sortable/#:~:text=Description%3A-,sorttable.,clicking%20on%20the%20table%20headers
// https://www.cssscript.com/fast-html-table-sorting/
templ ThrusterT(thrusters []configs_export.Thruster, mode2 tab.ShowEmpty, shared *types.SharedData) {
	@TabMenu(urls.Thrusters, mode2, shared)
	@tab.TabContent() {
		<div class="splitter">
			@tab.LeftTable(){
				@tab.TableTop(){
					@tab.PageHint() {
						Thrusters. You can equip Engine at your ship usually same as your ship's default Engine Max Force param.
					}
					@tab.FilterBar(shared)
					<div id="table-top-main">
						@ThrustersTable(thrusters, tab.MainMode, shared)
					</div>
					<div id={ "table-top-main" + string(tab.PinMode) } class="hidden">
						@ThrustersTable(thrusters, tab.PinMode, shared)
					</div>
				}
				@tab.TableBottom(){
					<div id="table-bottom-main">
						@GoodAtBaseSharedT(ShowAsCommodity(false), shared)
					</div>
					<div id={ "table-bottom-main" + string(tab.PinMode) } class="hidden">
						@GoodAtBaseSharedT(ShowAsCommodity(true), shared)
					</div>
				}
			}
			@tab.InfocardTable(){
				@tab.InfocardShared()
			}
		</div>
	}
}
