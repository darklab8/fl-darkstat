package disco

import (
	"github.com/darklab8/fl-darkstat/darkstat/configs_export"
	"github.com/darklab8/fl-darkstat/darkstat/front/types"
	"github.com/darklab8/fl-darkstat/darkstat/front/frmt"
	"github.com/darklab8/fl-darkstat/configs/cfg"
    "fmt"
)

templ ThDisco(shared *types.SharedData) {
	if shared.ShowDisco {
		<th style="width:50px;display:none;" class="tech_compat">ID Compat.</th>
		<th style="width:50px;">TechCell</th>
	}
}

templ TdDisco(
	shared *types.SharedData,
	nickname string,
	tech_compat *configs_export.DiscoveryTechCompat,
) {
	if shared.ShowDisco {
		<td style="display:none;" class="tech_compat" techcompats={ marshalIDs(shared, nickname) }>
			{ fmt.Sprintf("%.0f%%",(tech_compat.TechcompatByID[""]*100)) }
		</td>
		<td>
			<span class="tooltip">
				<span class="seo techcell">
				@frmt.MagnifyingGlass()
				if tech_compat.TechCell == "" {
					nil
				} else {
					{ tech_compat.TechCell }
				}
				</span>
				<span class="tooltiptext" style="font-size: 0.85em; max-height: 250px; overflow-y: scroll;">
					for _, disco_id := range shared.OrderedTechcompat.GetOrederedTechCompat(tech_compat) {
						{ fmt.Sprintf("%.0f%%",disco_id.TechCompat*100) } - { disco_id.Tractor.Name }
						<br/>
					}
				</span>
			</span>
		</td>
	}
}

templ TdDiscoTarget(
	shared *types.SharedData,
    cache_key TdCacheKey,
) {
    if shared.ShowDisco {
        <td data-target-1={ string(cache_key)} style="display:none;"></td>
        <td data-target-2={ string(cache_key)}></td>
    }
}

templ TdDiscoSource(
	shared *types.SharedData,
	nickname string,
	tech_compat *configs_export.DiscoveryTechCompat,
    cache_key TdCacheKey,
) {
	if shared.ShowDisco {
        <td data-source-1={ string(cache_key) } style="display:none;" class="tech_compat" techcompats={ marshalIDs(shared, nickname) }>
            { fmt.Sprintf("%.0f%%",(tech_compat.TechcompatByID[cfg.TractorID(tech_compat.TechCell)]*100)) }
        </td>
        <td data-source-2={ string(cache_key) }>
            <span class="tooltip">
                <span class="seo techcell">
                @frmt.MagnifyingGlass()
                if tech_compat.TechCell == "" {
                    nil
                } else {
                    { tech_compat.TechCell }
                }
                </span>
                <span class="tooltiptext" style="font-size: 0.85em; max-height: 250px; overflow-y: scroll;">
                    for _, disco_id := range shared.OrderedTechcompat.GetOrederedTechCompat(tech_compat) {
                        { fmt.Sprintf("%.0f%%",disco_id.TechCompat*100) } - { disco_id.Tractor.Name }
                        <br/>
                    }
                </span>
            </span>
        </td>
    }
}

templ CacheTechCompatTable(shared *types.SharedData, items []Item) {
	<div style="display: none;" data-td-disco-cache>
		<table>
			<tr><th></th><th></th></tr>
			for _, item := range GetDiscoCacheMap(items, shared) {
				<tr>
					@TdDiscoSource(shared, item.Nickname, item.Data, GetTdDiscoCacheKey(shared, item.Nickname))
				</tr>
			}
		</table>
	</div>
}