package front

import (
	"fmt"
	"github.com/darklab8/fl-darkstat/darkstat/configs_export"
	"github.com/darklab8/fl-darkstat/darkstat/front/tab"
	"github.com/darklab8/fl-darkstat/darkstat/front/types"
	"github.com/darklab8/fl-darkstat/darkstat/front/urls"
	"github.com/darklab8/fl-darkstat/darkstat/front/frmt"
	"strconv"
	"strings"
)

func AmmoDetailedUrl(ammo configs_export.Ammo) string {
	return "cdn/ammo/ammo_base_" + strings.ToLower(ammo.Nickname)
}

templ AmmoTable(ammos []configs_export.Ammo, pinm tab.PinMod, shared *types.SharedData) {
	<table class="sortable">
		<thead>
			<tr>
				<th style="width:100px;">Ammo</th>
				if pinm == tab.PinMode {
					<th style="width:25px;">Select</th>
					<th style="width:25px;">Select</th>
				}
				// @ThDisco(shared) // techcompat is not active for ammo
				<th style="width:25px;">Price</th>
				<th style="width:25px;">Buyable</th>
				if shared.ShowFLSR {
					<th style="width:5px;">Mass</th>
				}
				<th style="width:25px;">Hit Pts</th>
				<th style="width:5px;">
					if shared.ShowDisco {
						@frmt.MultiLinestring([]string{"Ammo", "Limit", "(+Max ","Cart.)"})
					} else {
						@frmt.MultiLinestring([]string{"Ammo", "Limit"})
					}
				</th>
				<th style="width:25px;">Volume</th>
				<th style="width:25px;">
					@frmt.MultiLinestring([]string{"Ammo", "Life","Time"})
				</th>
				<th style="width:25px;">
					@frmt.MultiLinestring([]string{"Seeker", "Type"})
				</th>
				<th style="width:25px;">
					@frmt.MultiLinestring([]string{"Seeker", "Range"})
				</th>
				<th style="width:25px;">
					@frmt.MultiLinestring([]string{"Seeker", "Fov","Deg"})
				</th>
				<th style="width:25px;">Nickname</th>
				<th style="width:25px;">Name ID</th>
				<th style="width:25px;">Info ID</th>
				<th style="max-width:100%;"></th>
			</tr>
		</thead>
		<tbody>
			for _, ammo := range ammos {
				@tab.TrFromMainTb(ammo.Nickname, AmmoDetailedUrl(ammo), pinm) {
					@tab.PinTd(ammo.Nickname, ammo.Name, pinm)
					@tab.PinSelectLeftRight(pinm, AmmoDetailedUrl(ammo))
					// @TdDisco(shared, ammo.Nickname, ammo.DiscoveryTechCompat) // techcompat is not active for ammo
					<td>{ strconv.Itoa(ammo.Price) } </td>
					<td>{ frmt.FormatBoolAsYesNo(configs_export.Buyable(ammo.Bases)) }</td>
					if shared.ShowFLSR {
						<td>{ fmt.Sprintf("%.2f", ammo.Mass) }</td>
					}
					<td>{ strconv.Itoa(ammo.HitPts) } </td>
					<td>{ frmt.GetAmmoLimitFormatted(ammo.AmmoLimit) }</td>
					<td>{ fmt.Sprintf("%.4f",ammo.Volume) }</td>
					<td>{ fmt.Sprintf("%.2f",ammo.MunitionLifetime) }</td>
					<td>{ ammo.SeekerType }</td>
					<td>{ strconv.Itoa(ammo.SeekerRange) }</td>
					<td>{ strconv.Itoa(ammo.SeekerFovDeg) }</td>
					<td class="seo">{ ammo.Nickname } </td>
					<td class="seo">{ strconv.Itoa(ammo.NameID) } </td>
					<td class="seo">{ strconv.Itoa(ammo.InfoID) } </td>
					@tab.TdInfoCardClick(configs_export.InfocardKey(ammo.Nickname), ammo.Nickname, pinm, shared, tab.InfocardClickOpts{})
				}
			}
		</tbody>
	</table>
}

// https://www.cssscript.com/minimalist-table-sortable/#:~:text=Description%3A-,sorttable.,clicking%20on%20the%20table%20headers
// https://www.cssscript.com/fast-html-table-sorting/
templ AmmoT(ammos []configs_export.Ammo, mode2 tab.ShowEmpty, shared *types.SharedData) {
	@TabMenu(urls.Ammo, mode2, shared)
	@tab.TabContent() {
		<div class="splitter">
			@tab.LeftTable(){
				@tab.TableTop(){
					@tab.FilterBar(&types.SharedData{})
					<div id="table-top-main">
						@AmmoTable(ammos, tab.MainMode, shared)
					</div>
					<div id={ "table-top-main" + string(tab.PinMode) } class="hidden">
						@AmmoTable(ammos, tab.PinMode, shared)
					</div>
				}
				@tab.TableBottom(){
					@GoodAtBaseSharedT(ShowAsCommodity(false), shared)
				}
			}
			@tab.InfocardTable(){
				@tab.InfocardShared()
			}
		</div>
	}
}
