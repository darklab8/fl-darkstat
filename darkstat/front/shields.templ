package front

import (
	"fmt"
	"github.com/darklab8/fl-darkstat/darkstat/configs_export"
	"github.com/darklab8/fl-darkstat/darkstat/configs_export/infocarder"
	"github.com/darklab8/fl-darkstat/darkstat/front/disco"
	"github.com/darklab8/fl-darkstat/darkstat/front/frmt"
	"github.com/darklab8/fl-darkstat/darkstat/front/tab"
	"github.com/darklab8/fl-darkstat/darkstat/front/types"
	"github.com/darklab8/fl-darkstat/darkstat/front/urls"
	"github.com/darklab8/go-utils/utils"
	"strconv"
	"strings"
)

func ShieldDetailedUrl(shield configs_export.Shield) string {
	return "cdn/shields/shields_base-" + strings.ToLower(shield.Nickname)
}

templ ShieldTable(shields []configs_export.Shield, pinm tab.PinMod, shared *types.SharedData) {
	<table class="sortable">
		<thead>
			<tr>
				<th style="width:200px;">Shield</th>
				if pinm == tab.PinMode {
					<th style="width:25px;">Select</th>
					<th style="width:25px;">Select</th>
				}
				@disco.ThDisco(shared)
				<th style="width:25px;">Class</th>
				<th style="width:25px;">Type</th>
				<th style="width:25px;">Technology</th>
				<th style="width:25px;">Price</th>
				<th style="width:25px;">Buyable</th>
				if shared.ShowFLSR {
					<th style="width:5px;">Mass</th>
				}
				<th style="width:25px;">Capacity</th>
				<th style="width:25px;">
					@frmt.MultiLinestring([]string{"Regen", "Rate"})
				</th>
				<th style="width:25px;">
					@frmt.MultiLinestring([]string{"Constant", "Power", "Draw"})
				</th>
				<th style="width:25px;">
					@frmt.MultiLinestring([]string{"Rebuild", "Power", "Draw"})
				</th>
				<th style="width:25px;">
					@frmt.MultiLinestring([]string{"Off", "Power", "Draw"})
				</th>
				<th style="width:25px;">Toughness</th>
				<th style="width:25px;">Hit Pts</th>
				<th style="width:25px;">Lootable</th>
				<th style="width:25px;">Nickname</th>
				<th style="width:25px;">HpType</th>
				<th style="width:25px;">Name ID</th>
				<th style="width:25px;">Info ID</th>
				<th style="max-width:100%;"></th>
			</tr>
		</thead>
		<tbody>
			for _, shield := range shields {
				@tab.TrFromMainTb(shield.Nickname, ShieldDetailedUrl(shield), pinm) {
					@tab.PinTd(shield.Nickname, shield.Name, pinm)
					@tab.PinSelectLeftRight(pinm, ShieldDetailedUrl(shield))
					@disco.TdDiscoTarget(shared, disco.GetTdDiscoCacheKey(shared, shield.Nickname))
					<td>{ shield.Class }</td>
					<td class="seo">{ shield.Type }</td>
					<td class="seo">{ shield.Technology }</td>
					<td>{ strconv.Itoa(shield.Price) } </td>
					<td>{ frmt.FormatBoolAsYesNo(configs_export.Buyable(shield.Bases)) }</td>
					if shared.ShowFLSR {
						<td>{ fmt.Sprintf("%.2f", shield.Mass) }</td>
					}
					<td>{ strconv.Itoa(shield.Capacity) } </td>
					<td>{ strconv.Itoa(shield.RegenerationRate) }</td>
					<td>{ strconv.Itoa(shield.ConstantPowerDraw) }</td>
					<td>{ strconv.Itoa(shield.RebuildPowerDraw) }</td>
					<td>{ strconv.Itoa(shield.OffRebuildTime) }</td>
					<td>{ fmt.Sprintf("%.2f",shield.Toughness) }</td>
					<td>{ strconv.Itoa(shield.HitPts) }</td>
					<td>{ strconv.FormatBool(shield.Lootable) }</td>
					<td class="seo">{ shield.Nickname } </td>
					<td class="seo">{ shield.HpType } </td>
					<td class="seo">{ strconv.Itoa(shield.IdsName) } </td>
					<td class="seo">{ strconv.Itoa(shield.IdsInfo) } </td>
					@tab.TdInfoCardClick(infocarder.InfocardKey(shield.Nickname), shield.Nickname, pinm, shared, tab.InfocardClickOpts{})
				}
			}
		</tbody>
	</table>
}

// https://www.cssscript.com/minimalist-table-sortable/#:~:text=Description%3A-,sorttable.,clicking%20on%20the%20table%20headers
// https://www.cssscript.com/fast-html-table-sorting/
templ ShieldT(shields []configs_export.Shield, mode2 tab.ShowEmpty, shared *types.SharedData) {
	@TabMenu(urls.Shields, mode2, shared)
	@tab.TabContent() {
		<div class="splitter">
			@tab.LeftTable() {
				@tab.TableTop() {
					@tab.PageHint() {
						Shields. You can equip <a href={ templ.SafeURL(types.GetCtx(ctx).SiteHost + "index_docs.html#Findingequipmentcompatiblewithspecifichardpoint") }>hp_type compatible. See Docs.</a>
					}
					@tab.FilterBar(shared)
					<div id="table-top-main">
						@ShieldTable(shields, tab.MainMode, shared)
					</div>
					<div id={ "table-top-main" + string(tab.PinMode) } class="hidden">
						@ShieldTable(shields, tab.PinMode, shared)
					</div>
				}
				@tab.TableBottom() {
					@GoodAtBaseSharedT(ShowAsCommodity(false), shared)
				}
			}
			@tab.InfocardTable() {
				@tab.InfocardShared()
			}
		</div>
		@disco.CacheTechCompatTable(shared, utils.CompL(shields, func(x configs_export.Shield) disco.Item { return x }))
	}
}

templ HighlightableRow() {
	<tr
		onclick="RowHighlighter(this)"
	>
		{ children... }
	</tr>
}
