{
  "swagger": "2.0",
  "info": {
    "title": "darkstat.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "Darkstat"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/statproto.Darkstat/GetAmmos": {
      "post": {
        "operationId": "Darkstat_GetAmmos",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/statprotoGetAmmoReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/statprotoGetEquipmentInput"
            }
          }
        ],
        "tags": [
          "Darkstat"
        ]
      }
    },
    "/statproto.Darkstat/GetBasesMiningOperations": {
      "post": {
        "summary": "Get all imaginary bases that in place of mining fields. Useful for trading calculations",
        "operationId": "Darkstat_GetBasesMiningOperations",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/statprotoGetBasesReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/statprotoGetBasesInput"
            }
          }
        ],
        "tags": [
          "Darkstat"
        ]
      }
    },
    "/statproto.Darkstat/GetBasesNpc": {
      "post": {
        "summary": "Get all Freelancer NPC bases",
        "operationId": "Darkstat_GetBasesNpc",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/statprotoGetBasesReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/statprotoGetBasesInput"
            }
          }
        ],
        "tags": [
          "Darkstat"
        ]
      }
    },
    "/statproto.Darkstat/GetBasesPoBs": {
      "post": {
        "summary": "Get all Player Owned bases in the same format as Npc bases. Returns only PoBs which have known positions\nUseful for trading calculations",
        "operationId": "Darkstat_GetBasesPoBs",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/statprotoGetBasesReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/statprotoGetBasesInput"
            }
          }
        ],
        "tags": [
          "Darkstat"
        ]
      }
    },
    "/statproto.Darkstat/GetCommodities": {
      "post": {
        "operationId": "Darkstat_GetCommodities",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/statprotoGetCommoditiesReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/statprotoGetCommoditiesInput"
            }
          }
        ],
        "tags": [
          "Darkstat"
        ]
      }
    },
    "/statproto.Darkstat/GetCounterMeasures": {
      "post": {
        "operationId": "Darkstat_GetCounterMeasures",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/statprotoGetCounterMeasuresReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/statprotoGetEquipmentInput"
            }
          }
        ],
        "tags": [
          "Darkstat"
        ]
      }
    },
    "/statproto.Darkstat/GetEngines": {
      "post": {
        "operationId": "Darkstat_GetEngines",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/statprotoGetEnginesReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/statprotoGetEquipmentInput"
            }
          }
        ],
        "tags": [
          "Darkstat"
        ]
      }
    },
    "/statproto.Darkstat/GetFactions": {
      "post": {
        "operationId": "Darkstat_GetFactions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/statprotoGetFactionsReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/statprotoGetFactionsInput"
            }
          }
        ],
        "tags": [
          "Darkstat"
        ]
      }
    },
    "/statproto.Darkstat/GetGraphPaths": {
      "post": {
        "operationId": "Darkstat_GetGraphPaths",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/statprotoGetGraphPathsReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/statprotoGetGraphPathsInput"
            }
          }
        ],
        "tags": [
          "Darkstat"
        ]
      }
    },
    "/statproto.Darkstat/GetGuns": {
      "post": {
        "operationId": "Darkstat_GetGuns",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/statprotoGetGunsReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/statprotoGetGunsInput"
            }
          }
        ],
        "tags": [
          "Darkstat"
        ]
      }
    },
    "/statproto.Darkstat/GetHashes": {
      "post": {
        "operationId": "Darkstat_GetHashes",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/statprotoGetHashesReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "The request message containing the user's name.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/statprotoEmpty"
            }
          }
        ],
        "tags": [
          "Darkstat"
        ]
      }
    },
    "/statproto.Darkstat/GetHealth": {
      "post": {
        "summary": "Just to check if grpc works. Returns boolean value if it is healthy as true",
        "operationId": "Darkstat_GetHealth",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/statprotoHealthReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "The request message containing the user's name.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/statprotoEmpty"
            }
          }
        ],
        "tags": [
          "Darkstat"
        ]
      }
    },
    "/statproto.Darkstat/GetInfocards": {
      "post": {
        "operationId": "Darkstat_GetInfocards",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/statprotoGetInfocardsReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/statprotoGetInfocardsInput"
            }
          }
        ],
        "tags": [
          "Darkstat"
        ]
      }
    },
    "/statproto.Darkstat/GetMines": {
      "post": {
        "operationId": "Darkstat_GetMines",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/statprotoGetMinesReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/statprotoGetEquipmentInput"
            }
          }
        ],
        "tags": [
          "Darkstat"
        ]
      }
    },
    "/statproto.Darkstat/GetMissiles": {
      "post": {
        "operationId": "Darkstat_GetMissiles",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/statprotoGetGunsReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/statprotoGetGunsInput"
            }
          }
        ],
        "tags": [
          "Darkstat"
        ]
      }
    },
    "/statproto.Darkstat/GetPoBGoods": {
      "post": {
        "summary": "Get all PoB goods, where they are sold and bought. Reverse search by PoBs",
        "operationId": "Darkstat_GetPoBGoods",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/statprotoGetPoBGoodsReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "The request message containing the user's name.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/statprotoEmpty"
            }
          }
        ],
        "tags": [
          "Darkstat"
        ]
      }
    },
    "/statproto.Darkstat/GetPoBs": {
      "post": {
        "summary": "Get all Player Owned bases. Completely all that are public exposed",
        "operationId": "Darkstat_GetPoBs",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/statprotoGetPoBsReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "The request message containing the user's name.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/statprotoEmpty"
            }
          }
        ],
        "tags": [
          "Darkstat"
        ]
      }
    },
    "/statproto.Darkstat/GetScanners": {
      "post": {
        "operationId": "Darkstat_GetScanners",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/statprotoGetScannersReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/statprotoGetEquipmentInput"
            }
          }
        ],
        "tags": [
          "Darkstat"
        ]
      }
    },
    "/statproto.Darkstat/GetShields": {
      "post": {
        "operationId": "Darkstat_GetShields",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/statprotoGetShieldsReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/statprotoGetEquipmentInput"
            }
          }
        ],
        "tags": [
          "Darkstat"
        ]
      }
    },
    "/statproto.Darkstat/GetShips": {
      "post": {
        "operationId": "Darkstat_GetShips",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/statprotoGetShipsReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/statprotoGetEquipmentInput"
            }
          }
        ],
        "tags": [
          "Darkstat"
        ]
      }
    },
    "/statproto.Darkstat/GetThrusters": {
      "post": {
        "operationId": "Darkstat_GetThrusters",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/statprotoGetThrustersReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/statprotoGetEquipmentInput"
            }
          }
        ],
        "tags": [
          "Darkstat"
        ]
      }
    },
    "/statproto.Darkstat/GetTractors": {
      "post": {
        "summary": "Get Tractors. For Discovery those are IDs",
        "operationId": "Darkstat_GetTractors",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/statprotoGetTractorsReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/statprotoGetTractorsInput"
            }
          }
        ],
        "tags": [
          "Darkstat"
        ]
      }
    }
  },
  "definitions": {
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "statprotoAmmo": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "price": {
          "type": "string",
          "format": "int64"
        },
        "hitPts": {
          "type": "string",
          "format": "int64"
        },
        "volume": {
          "type": "number",
          "format": "double"
        },
        "munitionLifetime": {
          "type": "number",
          "format": "double"
        },
        "nickname": {
          "type": "string"
        },
        "nameId": {
          "type": "string",
          "format": "int64"
        },
        "infoId": {
          "type": "string",
          "format": "int64"
        },
        "seekerType": {
          "type": "string"
        },
        "seekerRange": {
          "type": "string",
          "format": "int64"
        },
        "seekerFovDeg": {
          "type": "string",
          "format": "int64"
        },
        "bases": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/statprotoMarketGood"
          }
        },
        "discoveryTechCompat": {
          "$ref": "#/definitions/statprotoDiscoveryTechCompat"
        },
        "ammoLimit": {
          "$ref": "#/definitions/statprotoAmmoLimit"
        },
        "mass": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "statprotoAmmoLimit": {
      "type": "object",
      "properties": {
        "amountInCatridge": {
          "type": "string",
          "format": "int64"
        },
        "maxCatridges": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "statprotoBase": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "archetypes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "nickname": {
          "type": "string"
        },
        "factionName": {
          "type": "string"
        },
        "systemName": {
          "type": "string"
        },
        "systemNickname": {
          "type": "string"
        },
        "regionName": {
          "type": "string"
        },
        "stridName": {
          "type": "string",
          "format": "int64"
        },
        "infocardId": {
          "type": "string",
          "format": "int64"
        },
        "file": {
          "type": "string"
        },
        "bgcsBaseRunBy": {
          "type": "string"
        },
        "pos": {
          "$ref": "#/definitions/statprotoPos"
        },
        "sectorCoord": {
          "type": "string"
        },
        "isTransportUnreachable": {
          "type": "boolean"
        },
        "isReachhable": {
          "type": "boolean"
        },
        "IsPob": {
          "type": "boolean"
        },
        "marketGoods": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/statprotoMarketGood"
          }
        }
      },
      "title": "The response message containing the greetings"
    },
    "statprotoBaseInfo": {
      "type": "object",
      "properties": {
        "baseNickname": {
          "type": "string"
        },
        "baseName": {
          "type": "string"
        },
        "systemName": {
          "type": "string"
        },
        "regionName": {
          "type": "string"
        },
        "factionName": {
          "type": "string"
        },
        "basePos": {
          "$ref": "#/definitions/statprotoPos"
        },
        "sectorCoord": {
          "type": "string"
        }
      }
    },
    "statprotoBribe": {
      "type": "object",
      "properties": {
        "baseNickname": {
          "type": "string"
        },
        "chance": {
          "type": "number",
          "format": "double"
        },
        "baseInfo": {
          "$ref": "#/definitions/statprotoBaseInfo"
        }
      }
    },
    "statprotoBurstFire": {
      "type": "object",
      "properties": {
        "sustainedRefire": {
          "type": "number",
          "format": "double"
        },
        "ammo": {
          "type": "string",
          "format": "int64"
        },
        "reloadTime": {
          "type": "number",
          "format": "double"
        },
        "sustainedHullDamagePerSec": {
          "type": "number",
          "format": "double"
        },
        "sustainedAvgShieldDamagePerSec": {
          "type": "number",
          "format": "double"
        },
        "sustainedEnergyDamagePerSec": {
          "type": "number",
          "format": "double"
        },
        "sustainedPowerUsagePerSec": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "statprotoCommodity": {
      "type": "object",
      "properties": {
        "nickname": {
          "type": "string"
        },
        "priceBase": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "combinable": {
          "type": "boolean"
        },
        "volume": {
          "type": "number",
          "format": "double"
        },
        "shipClass": {
          "type": "string",
          "format": "int64"
        },
        "nameId": {
          "type": "string",
          "format": "int64"
        },
        "infocardId": {
          "type": "string",
          "format": "int64"
        },
        "bases": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/statprotoMarketGood"
          }
        },
        "priceBestBaseBuysFor": {
          "type": "string",
          "format": "int64"
        },
        "priceBestBaseSellsFor": {
          "type": "string",
          "format": "int64"
        },
        "proffitMargin": {
          "type": "string",
          "format": "int64"
        },
        "mass": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "statprotoCounterMeasure": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "price": {
          "type": "string",
          "format": "int64"
        },
        "hitPts": {
          "type": "string",
          "format": "int64"
        },
        "aiRange": {
          "type": "string",
          "format": "int64"
        },
        "lifetime": {
          "type": "string",
          "format": "int64"
        },
        "range": {
          "type": "string",
          "format": "int64"
        },
        "diversionPctg": {
          "type": "string",
          "format": "int64"
        },
        "lootable": {
          "type": "boolean"
        },
        "nickname": {
          "type": "string"
        },
        "nameId": {
          "type": "string",
          "format": "int64"
        },
        "infoId": {
          "type": "string",
          "format": "int64"
        },
        "bases": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/statprotoMarketGood"
          }
        },
        "discoveryTechCompat": {
          "$ref": "#/definitions/statprotoDiscoveryTechCompat"
        },
        "ammoLimit": {
          "$ref": "#/definitions/statprotoAmmoLimit"
        },
        "mass": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "statprotoDamageBonus": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "modifier": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "statprotoDiscoGun": {
      "type": "object",
      "properties": {
        "armorPen": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "statprotoDiscoShip": {
      "type": "object",
      "properties": {
        "armorMult": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "statprotoDiscoveryTechCompat": {
      "type": "object",
      "properties": {
        "techcompatById": {
          "type": "object",
          "additionalProperties": {
            "type": "number",
            "format": "double"
          }
        },
        "techCell": {
          "type": "string"
        }
      }
    },
    "statprotoEmpty": {
      "type": "object",
      "description": "The request message containing the user's name."
    },
    "statprotoEngine": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "price": {
          "type": "string",
          "format": "int64"
        },
        "cruiseSpeed": {
          "type": "string",
          "format": "int64"
        },
        "cruiseChargeTime": {
          "type": "string",
          "format": "int64"
        },
        "linearDrag": {
          "type": "string",
          "format": "int64"
        },
        "maxForce": {
          "type": "string",
          "format": "int64"
        },
        "reverseFraction": {
          "type": "number",
          "format": "double"
        },
        "impulseSpeed": {
          "type": "number",
          "format": "double"
        },
        "hpType": {
          "type": "string"
        },
        "flameEffect": {
          "type": "string"
        },
        "trailEffect": {
          "type": "string"
        },
        "nickname": {
          "type": "string"
        },
        "nameId": {
          "type": "string",
          "format": "int64"
        },
        "infoId": {
          "type": "string",
          "format": "int64"
        },
        "bases": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/statprotoMarketGood"
          }
        },
        "discoveryTechCompat": {
          "$ref": "#/definitions/statprotoDiscoveryTechCompat"
        },
        "mass": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "statprotoEquipmentSlot": {
      "type": "object",
      "properties": {
        "slotName": {
          "type": "string"
        },
        "allowedEquip": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "statprotoFaction": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "shortName": {
          "type": "string"
        },
        "nickname": {
          "type": "string"
        },
        "objectDestruction": {
          "type": "number",
          "format": "double"
        },
        "missionSuccess": {
          "type": "number",
          "format": "double"
        },
        "missionFailure": {
          "type": "number",
          "format": "double"
        },
        "missionAbort": {
          "type": "number",
          "format": "double"
        },
        "infonameId": {
          "type": "string",
          "format": "int64"
        },
        "infocardId": {
          "type": "string",
          "format": "int64"
        },
        "reputations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/statprotoReputation"
          }
        },
        "bribes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/statprotoBribe"
          }
        }
      }
    },
    "statprotoGetAmmoReply": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/statprotoAmmo"
          }
        }
      }
    },
    "statprotoGetBasesInput": {
      "type": "object",
      "properties": {
        "includeMarketGoods": {
          "type": "boolean",
          "title": "\"insert 'true' if wish to include market goods under 'market goods' key or not. Such data can add a lot of extra weight\""
        },
        "filterToUseful": {
          "type": "boolean",
          "title": "Apply filtering same as darkstat does by default for its tab. Usually means showing only items that can be bought/crafted/or found"
        },
        "filterNicknames": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "filters by base nicknames"
        },
        "filterMarketGoodCategory": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "filters market goods to specific category. valid categories are written in market goods in same named attribute."
        }
      }
    },
    "statprotoGetBasesReply": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/statprotoBase"
          }
        }
      }
    },
    "statprotoGetCommoditiesInput": {
      "type": "object",
      "properties": {
        "includeMarketGoods": {
          "type": "boolean",
          "description": "Example: `false`",
          "title": "To Include market goods, where the item is sold and bought or not. Adds a lot of extra weight to data"
        },
        "filterToUseful": {
          "type": "boolean"
        },
        "filterNicknames": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "filters by item nicknames"
        }
      }
    },
    "statprotoGetCommoditiesReply": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/statprotoCommodity"
          }
        }
      }
    },
    "statprotoGetCounterMeasuresReply": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/statprotoCounterMeasure"
          }
        }
      }
    },
    "statprotoGetEnginesReply": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/statprotoEngine"
          }
        }
      }
    },
    "statprotoGetEquipmentInput": {
      "type": "object",
      "properties": {
        "includeMarketGoods": {
          "type": "boolean",
          "title": "\"insert 'true' if wish to include market goods under 'market goods' key or not. Such data can add a lot of extra weight\""
        },
        "includeTechCompat": {
          "type": "boolean",
          "title": "insert 'true' if wish to include tech compatibility data. can be adding a lot of extra weight"
        },
        "filterToUseful": {
          "type": "boolean",
          "title": "Apply filtering same as darkstat does by default for its tab. Usually means showing only items that can be bought/crafted/or found"
        },
        "filterNicknames": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "filters by item nicknames"
        }
      }
    },
    "statprotoGetFactionsInput": {
      "type": "object",
      "properties": {
        "includeReputations": {
          "type": "boolean"
        },
        "includeBribes": {
          "type": "boolean"
        },
        "filterToUseful": {
          "type": "boolean"
        }
      }
    },
    "statprotoGetFactionsReply": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/statprotoFaction"
          }
        }
      }
    },
    "statprotoGetGraphPathsAnswer": {
      "type": "object",
      "properties": {
        "route": {
          "$ref": "#/definitions/statprotoGraphPathQuery"
        },
        "time": {
          "$ref": "#/definitions/statprotoGraphPathTime"
        },
        "error": {
          "type": "string"
        }
      }
    },
    "statprotoGetGraphPathsInput": {
      "type": "object",
      "properties": {
        "queries": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/statprotoGraphPathQuery"
          }
        }
      }
    },
    "statprotoGetGraphPathsReply": {
      "type": "object",
      "properties": {
        "answers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/statprotoGetGraphPathsAnswer"
          }
        }
      }
    },
    "statprotoGetGunsInput": {
      "type": "object",
      "properties": {
        "includeMarketGoods": {
          "type": "boolean",
          "title": "\"insert 'true' if wish to include market goods under 'market goods' key or not. Such data can add a lot of extra weight\""
        },
        "includeTechCompat": {
          "type": "boolean"
        },
        "filterToUseful": {
          "type": "boolean",
          "title": "Apply filtering same as darkstat does by default for its tab. Usually means showing only items that can be bought/crafted/or found"
        },
        "includeDamageBonuses": {
          "type": "boolean"
        },
        "filterNicknames": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "filters by item nicknames"
        }
      }
    },
    "statprotoGetGunsReply": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/statprotoGun"
          }
        }
      }
    },
    "statprotoGetHashesReply": {
      "type": "object",
      "properties": {
        "hashesByNick": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/statprotoHash"
          }
        }
      }
    },
    "statprotoGetInfocardAnswer": {
      "type": "object",
      "properties": {
        "query": {
          "type": "string"
        },
        "infocard": {
          "$ref": "#/definitions/statprotoInfocard"
        },
        "error": {
          "type": "string"
        }
      }
    },
    "statprotoGetInfocardsInput": {
      "type": "object",
      "properties": {
        "nicknames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "statprotoGetInfocardsReply": {
      "type": "object",
      "properties": {
        "answers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/statprotoGetInfocardAnswer"
          }
        }
      }
    },
    "statprotoGetMinesReply": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/statprotoMine"
          }
        }
      }
    },
    "statprotoGetPoBGoodsReply": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/statprotoPoBGood"
          }
        }
      }
    },
    "statprotoGetPoBsReply": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/statprotoPoB"
          }
        }
      }
    },
    "statprotoGetScannersReply": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/statprotoScanner"
          }
        }
      }
    },
    "statprotoGetShieldsReply": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/statprotoShield"
          }
        }
      }
    },
    "statprotoGetShipsReply": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/statprotoShip"
          }
        }
      }
    },
    "statprotoGetThrustersReply": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/statprotoThruster"
          }
        }
      }
    },
    "statprotoGetTractorsInput": {
      "type": "object",
      "properties": {
        "includeMarketGoods": {
          "type": "boolean",
          "title": "By default not outputing market goods in case u wish to save network"
        },
        "filterToUseful": {
          "type": "boolean",
          "title": "Apply filtering same as darkstat does by default for its tab. Usually means showing only items that can be bought/crafted/or found"
        },
        "filterNicknames": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "filters by item nicknames"
        }
      }
    },
    "statprotoGetTractorsReply": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/statprotoTractor"
          }
        }
      }
    },
    "statprotoGraphPathQuery": {
      "type": "object",
      "properties": {
        "from": {
          "type": "string"
        },
        "to": {
          "type": "string"
        }
      }
    },
    "statprotoGraphPathTime": {
      "type": "object",
      "properties": {
        "transport": {
          "type": "string",
          "format": "int64"
        },
        "frigate": {
          "type": "string",
          "format": "int64"
        },
        "freighter": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "statprotoGun": {
      "type": "object",
      "properties": {
        "bases": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/statprotoMarketGood"
          }
        },
        "discoveryTechCompat": {
          "$ref": "#/definitions/statprotoDiscoveryTechCompat"
        },
        "nickname": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "price": {
          "type": "string",
          "format": "int64"
        },
        "class": {
          "type": "string"
        },
        "hpType": {
          "type": "string"
        },
        "idsName": {
          "type": "string",
          "format": "int64"
        },
        "idsInfo": {
          "type": "string",
          "format": "int64"
        },
        "volume": {
          "type": "number",
          "format": "double"
        },
        "hitPts": {
          "type": "string"
        },
        "powerUsage": {
          "type": "number",
          "format": "double"
        },
        "refire": {
          "type": "number",
          "format": "double"
        },
        "range": {
          "type": "number",
          "format": "double"
        },
        "toughness": {
          "type": "number",
          "format": "double"
        },
        "isAutoTurret": {
          "type": "boolean"
        },
        "lootable": {
          "type": "boolean"
        },
        "requiredAmmo": {
          "type": "boolean"
        },
        "hullDamage": {
          "type": "string",
          "format": "int64"
        },
        "energyDamage": {
          "type": "string",
          "format": "int64"
        },
        "shieldDamage": {
          "type": "string",
          "format": "int64"
        },
        "avgShieldDamage": {
          "type": "string",
          "format": "int64"
        },
        "damageType": {
          "type": "string"
        },
        "lifeTime": {
          "type": "number",
          "format": "double"
        },
        "speed": {
          "type": "number",
          "format": "double"
        },
        "gunTurnRate": {
          "type": "number",
          "format": "double"
        },
        "dispersionAngle": {
          "type": "number",
          "format": "double"
        },
        "hullDamagePerSec": {
          "type": "number",
          "format": "double"
        },
        "avgShieldDamagePerSec": {
          "type": "number",
          "format": "double"
        },
        "energyDamagePerSec": {
          "type": "number",
          "format": "double"
        },
        "powerUsagePerSec": {
          "type": "number",
          "format": "double"
        },
        "avgEfficiency": {
          "type": "number",
          "format": "double"
        },
        "hullEfficiency": {
          "type": "number",
          "format": "double"
        },
        "shieldEfficiency": {
          "type": "number",
          "format": "double"
        },
        "energyDamageEfficiency": {
          "type": "number",
          "format": "double"
        },
        "damageBonuses": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/statprotoDamageBonus"
          }
        },
        "missile": {
          "$ref": "#/definitions/statprotoMissile",
          "title": "has data defined but only for Missile guns :)"
        },
        "gunDetailed": {
          "$ref": "#/definitions/statprotoGunDetailed"
        },
        "numBarrels": {
          "type": "string",
          "format": "int64"
        },
        "burstFire": {
          "$ref": "#/definitions/statprotoBurstFire"
        },
        "ammoLimit": {
          "$ref": "#/definitions/statprotoAmmoLimit"
        },
        "mass": {
          "type": "number",
          "format": "double"
        },
        "discoGun": {
          "$ref": "#/definitions/statprotoDiscoGun"
        }
      }
    },
    "statprotoGunDetailed": {
      "type": "object",
      "properties": {
        "flashParticleName": {
          "type": "string"
        },
        "constEffect": {
          "type": "string"
        },
        "munitionHitEffect": {
          "type": "string"
        }
      }
    },
    "statprotoHash": {
      "type": "object",
      "properties": {
        "int32": {
          "type": "integer",
          "format": "int32"
        },
        "uint32": {
          "type": "integer",
          "format": "int64"
        },
        "hex": {
          "type": "string"
        }
      }
    },
    "statprotoHealthReply": {
      "type": "object",
      "properties": {
        "isHealthy": {
          "type": "boolean"
        }
      }
    },
    "statprotoInfocard": {
      "type": "object",
      "properties": {
        "lines": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/statprotoInfocardLine"
          }
        }
      }
    },
    "statprotoInfocardLine": {
      "type": "object",
      "properties": {
        "phrases": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/statprotoInfocardPhrase"
          }
        }
      }
    },
    "statprotoInfocardPhrase": {
      "type": "object",
      "properties": {
        "phrase": {
          "type": "string"
        },
        "link": {
          "type": "string"
        },
        "bold": {
          "type": "boolean"
        }
      }
    },
    "statprotoMarketGood": {
      "type": "object",
      "properties": {
        "nickname": {
          "type": "string"
        },
        "shipNickname": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "priceBase": {
          "type": "string",
          "format": "int64"
        },
        "hpType": {
          "type": "string"
        },
        "category": {
          "type": "string"
        },
        "levelRequired": {
          "type": "string",
          "format": "int64"
        },
        "repRequired": {
          "type": "number",
          "format": "double"
        },
        "priceBaseBuysFor": {
          "type": "string",
          "format": "int64"
        },
        "priceBaseSellsFor": {
          "type": "string",
          "format": "int64"
        },
        "volume": {
          "type": "number",
          "format": "double"
        },
        "shipClass": {
          "type": "string",
          "format": "int64"
        },
        "baseSells": {
          "type": "boolean"
        },
        "isServerSideOverride": {
          "type": "boolean"
        },
        "notBuyable": {
          "type": "boolean"
        },
        "isTransportUnreachable": {
          "type": "boolean"
        },
        "baseInfo": {
          "$ref": "#/definitions/statprotoBaseInfo"
        }
      }
    },
    "statprotoMine": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "price": {
          "type": "string",
          "format": "int64"
        },
        "ammoPrice": {
          "type": "string",
          "format": "int64"
        },
        "nickname": {
          "type": "string"
        },
        "projectileArchetype": {
          "type": "string"
        },
        "idsName": {
          "type": "string",
          "format": "int64"
        },
        "idsInfo": {
          "type": "string",
          "format": "int64"
        },
        "hullDamage": {
          "type": "string",
          "format": "int64"
        },
        "energyDamange": {
          "type": "string",
          "format": "int64"
        },
        "shieldDamage": {
          "type": "string",
          "format": "int64"
        },
        "powerUsage": {
          "type": "number",
          "format": "double"
        },
        "value": {
          "type": "number",
          "format": "double"
        },
        "refire": {
          "type": "number",
          "format": "double"
        },
        "detonationDistance": {
          "type": "number",
          "format": "double"
        },
        "radius": {
          "type": "number",
          "format": "double"
        },
        "seekDistance": {
          "type": "string",
          "format": "int64"
        },
        "topSpeed": {
          "type": "string",
          "format": "int64"
        },
        "acceleration": {
          "type": "string",
          "format": "int64"
        },
        "linearDrag": {
          "type": "number",
          "format": "double"
        },
        "lifeTime": {
          "type": "number",
          "format": "double"
        },
        "ownerSafe": {
          "type": "string",
          "format": "int64"
        },
        "toughness": {
          "type": "number",
          "format": "double"
        },
        "hitPts": {
          "type": "string",
          "format": "int64"
        },
        "lootable": {
          "type": "boolean"
        },
        "ammoLimit": {
          "$ref": "#/definitions/statprotoAmmoLimit"
        },
        "mass": {
          "type": "number",
          "format": "double"
        },
        "bases": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/statprotoMarketGood"
          }
        },
        "discoveryTechCompat": {
          "$ref": "#/definitions/statprotoDiscoveryTechCompat"
        }
      }
    },
    "statprotoMissile": {
      "type": "object",
      "properties": {
        "maxAngularVelocity": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "statprotoPoB": {
      "type": "object",
      "properties": {
        "core": {
          "$ref": "#/definitions/statprotoPoBCore"
        },
        "shopItems": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/statprotoShopItem"
          }
        }
      }
    },
    "statprotoPoBCore": {
      "type": "object",
      "properties": {
        "nickname": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "pos": {
          "type": "string"
        },
        "level": {
          "type": "string",
          "format": "int64"
        },
        "money": {
          "type": "string",
          "format": "int64"
        },
        "health": {
          "type": "number",
          "format": "double"
        },
        "defenseMode": {
          "type": "string",
          "format": "int64"
        },
        "systemNick": {
          "type": "string"
        },
        "systemName": {
          "type": "string"
        },
        "factionNick": {
          "type": "string"
        },
        "factionName": {
          "type": "string"
        },
        "forumThreadUrl": {
          "type": "string"
        },
        "cargoSpaceLeft": {
          "type": "string",
          "format": "int64"
        },
        "basePos": {
          "$ref": "#/definitions/statprotoPos"
        },
        "sectorCoord": {
          "type": "string"
        },
        "region": {
          "type": "string"
        }
      }
    },
    "statprotoPoBGood": {
      "type": "object",
      "properties": {
        "nickname": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "totalBuyableFromBases": {
          "type": "string",
          "format": "int64"
        },
        "totalSellableToBases": {
          "type": "string",
          "format": "int64"
        },
        "bestPriceToBuy": {
          "type": "string",
          "format": "int64"
        },
        "bestPriceToSell": {
          "type": "string",
          "format": "int64"
        },
        "category": {
          "type": "string"
        },
        "anyBaseSells": {
          "type": "boolean"
        },
        "anyBaseBuys": {
          "type": "boolean"
        },
        "bases": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/statprotoPoBGoodBase"
          }
        }
      }
    },
    "statprotoPoBGoodBase": {
      "type": "object",
      "properties": {
        "shopItem": {
          "$ref": "#/definitions/statprotoShopItem"
        },
        "base": {
          "$ref": "#/definitions/statprotoPoBCore"
        }
      }
    },
    "statprotoPos": {
      "type": "object",
      "properties": {
        "X": {
          "type": "number",
          "format": "double"
        },
        "Y": {
          "type": "number",
          "format": "double"
        },
        "Z": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "statprotoReputation": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "rep": {
          "type": "number",
          "format": "double"
        },
        "empathy": {
          "type": "number",
          "format": "double"
        },
        "nickname": {
          "type": "string"
        }
      }
    },
    "statprotoScanner": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "price": {
          "type": "string",
          "format": "int64"
        },
        "range": {
          "type": "string",
          "format": "int64"
        },
        "cargoScanRange": {
          "type": "string",
          "format": "int64"
        },
        "lootable": {
          "type": "boolean"
        },
        "nickname": {
          "type": "string"
        },
        "nameId": {
          "type": "string",
          "format": "int64"
        },
        "infoId": {
          "type": "string",
          "format": "int64"
        },
        "mass": {
          "type": "number",
          "format": "double"
        },
        "bases": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/statprotoMarketGood"
          }
        },
        "discoveryTechCompat": {
          "$ref": "#/definitions/statprotoDiscoveryTechCompat"
        }
      }
    },
    "statprotoShield": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "class": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "technology": {
          "type": "string"
        },
        "price": {
          "type": "string",
          "format": "int64"
        },
        "capacity": {
          "type": "string",
          "format": "int64"
        },
        "regenerationRate": {
          "type": "string",
          "format": "int64"
        },
        "constantPowerDraw": {
          "type": "string",
          "format": "int64"
        },
        "value": {
          "type": "number",
          "format": "double"
        },
        "rebuildPowerDraw": {
          "type": "string",
          "format": "int64"
        },
        "offRebuildTime": {
          "type": "string",
          "format": "int64"
        },
        "toughness": {
          "type": "number",
          "format": "double"
        },
        "hitPts": {
          "type": "string",
          "format": "int64"
        },
        "lootable": {
          "type": "boolean"
        },
        "nickname": {
          "type": "string"
        },
        "hpType": {
          "type": "string"
        },
        "idsName": {
          "type": "string",
          "format": "int64"
        },
        "idsInfo": {
          "type": "string",
          "format": "int64"
        },
        "mass": {
          "type": "number",
          "format": "double"
        },
        "bases": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/statprotoMarketGood"
          }
        },
        "discoveryTechCompat": {
          "$ref": "#/definitions/statprotoDiscoveryTechCompat"
        }
      }
    },
    "statprotoShip": {
      "type": "object",
      "properties": {
        "nickname": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "class": {
          "type": "string",
          "format": "int64"
        },
        "type": {
          "type": "string"
        },
        "price": {
          "type": "string",
          "format": "int64"
        },
        "armor": {
          "type": "string",
          "format": "int64"
        },
        "holdSize": {
          "type": "string",
          "format": "int64"
        },
        "nanobots": {
          "type": "string",
          "format": "int64"
        },
        "batteries": {
          "type": "string",
          "format": "int64"
        },
        "mass": {
          "type": "number",
          "format": "double"
        },
        "powerCapacity": {
          "type": "string",
          "format": "int64"
        },
        "powerRechargeRate": {
          "type": "string",
          "format": "int64"
        },
        "cruiseSpeed": {
          "type": "string",
          "format": "int64"
        },
        "linearDrag": {
          "type": "number",
          "format": "double"
        },
        "engineMaxForce": {
          "type": "string",
          "format": "int64"
        },
        "impulseSpeed": {
          "type": "number",
          "format": "double"
        },
        "thrusterSpeed": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          }
        },
        "reverseFraction": {
          "type": "number",
          "format": "double"
        },
        "thrustCapacity": {
          "type": "string",
          "format": "int64"
        },
        "thrustRecharge": {
          "type": "string",
          "format": "int64"
        },
        "maxAngularSpeedDegS": {
          "type": "number",
          "format": "double"
        },
        "angularDistanceFrom0ToHalfSec": {
          "type": "number",
          "format": "double"
        },
        "timeTo90MaxAngularSpeed": {
          "type": "number",
          "format": "double"
        },
        "nudgeForce": {
          "type": "number",
          "format": "double"
        },
        "strafeForce": {
          "type": "number",
          "format": "double"
        },
        "nameId": {
          "type": "string",
          "format": "int64"
        },
        "infoId": {
          "type": "string",
          "format": "int64"
        },
        "slots": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/statprotoEquipmentSlot"
          }
        },
        "biggestHardpoint": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "shipPackages": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/statprotoShipPackage"
          }
        },
        "bases": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/statprotoMarketGood"
          }
        },
        "discoveryTechCompat": {
          "$ref": "#/definitions/statprotoDiscoveryTechCompat"
        },
        "discoShip": {
          "$ref": "#/definitions/statprotoDiscoShip"
        }
      }
    },
    "statprotoShipPackage": {
      "type": "object",
      "properties": {
        "nickname": {
          "type": "string"
        }
      }
    },
    "statprotoShopItem": {
      "type": "object",
      "properties": {
        "nickname": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "category": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "quantity": {
          "type": "string",
          "format": "int64"
        },
        "price": {
          "type": "string",
          "format": "int64"
        },
        "sellPrice": {
          "type": "string",
          "format": "int64"
        },
        "minStock": {
          "type": "string",
          "format": "int64"
        },
        "maxStock": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "statprotoThruster": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "price": {
          "type": "string",
          "format": "int64"
        },
        "maxForce": {
          "type": "string",
          "format": "int64"
        },
        "powerUsage": {
          "type": "string",
          "format": "int64"
        },
        "efficiency": {
          "type": "number",
          "format": "double"
        },
        "value": {
          "type": "number",
          "format": "double"
        },
        "hitPts": {
          "type": "string",
          "format": "int64"
        },
        "lootable": {
          "type": "boolean"
        },
        "nickname": {
          "type": "string"
        },
        "nameId": {
          "type": "string",
          "format": "int64"
        },
        "infoId": {
          "type": "string",
          "format": "int64"
        },
        "mass": {
          "type": "number",
          "format": "double"
        },
        "bases": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/statprotoMarketGood"
          }
        },
        "discoveryTechCompat": {
          "$ref": "#/definitions/statprotoDiscoveryTechCompat"
        }
      }
    },
    "statprotoTractor": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "price": {
          "type": "string",
          "format": "int64"
        },
        "maxLength": {
          "type": "string",
          "format": "int64"
        },
        "reachSpeed": {
          "type": "string",
          "format": "int64"
        },
        "lootable": {
          "type": "boolean"
        },
        "nickname": {
          "type": "string"
        },
        "shortNickname": {
          "type": "string"
        },
        "nameId": {
          "type": "string",
          "format": "int64"
        },
        "infoId": {
          "type": "string",
          "format": "int64"
        },
        "bases": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/statprotoMarketGood"
          }
        },
        "mass": {
          "type": "number",
          "format": "double"
        }
      }
    }
  }
}
